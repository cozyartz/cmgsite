name: CI/CD Pipeline\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\nenv:\n  NODE_VERSION: '18'\n  CACHE_VERSION: v1\n\njobs:\n  # Code Quality Check\n  quality:\n    name: Code Quality & Linting\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Check TypeScript\n        run: npx tsc --noEmit\n\n      - name: Lint code\n        run: npm run lint\n\n      - name: Check formatting\n        run: npm run format:check\n\n  # Security Audit\n  security:\n    name: Security Audit\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run security audit\n        run: npm audit --audit-level=moderate\n\n      - name: Check for vulnerabilities\n        run: npm audit --audit-level=high --production\n\n  # Unit Tests\n  test:\n    name: Unit Tests\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run tests\n        run: npm run test:run\n\n      - name: Generate coverage\n        run: npm run test:coverage\n\n      - name: Upload coverage to Codecov\n        uses: codecov/codecov-action@v3\n        with:\n          token: ${{ secrets.CODECOV_TOKEN }}\n          files: ./coverage/lcov.info\n          fail_ci_if_error: false\n\n  # Build Test\n  build:\n    name: Build Test\n    runs-on: ubuntu-latest\n    needs: [quality, security, test]\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Build application\n        run: npm run build\n        env:\n          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}\n          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}\n          VITE_SITE_URL: https://cozyartzmedia.com\n          VITE_CALLBACK_URL: https://cozyartzmedia.com/auth/callback\n          VITE_TURNSTILE_SITE_KEY: ${{ secrets.VITE_TURNSTILE_SITE_KEY }}\n\n      - name: Upload build artifacts\n        uses: actions/upload-artifact@v3\n        with:\n          name: build-files\n          path: dist/\n          retention-days: 7\n\n  # Deploy to Staging\n  deploy-staging:\n    name: Deploy to Staging\n    runs-on: ubuntu-latest\n    needs: [build]\n    if: github.ref == 'refs/heads/develop'\n    environment: staging\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Deploy to Cloudflare Pages (Staging)\n        run: npm run deploy:staging\n        env:\n          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}\n          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}\n          VITE_ENVIRONMENT: staging\n          VITE_SITE_URL: https://staging.cmgsite.pages.dev\n          VITE_CALLBACK_URL: https://staging.cmgsite.pages.dev/auth/callback\n          VITE_TURNSTILE_SITE_KEY: ${{ secrets.VITE_TURNSTILE_SITE_KEY }}\n\n  # Deploy to Production\n  deploy-production:\n    name: Deploy to Production\n    runs-on: ubuntu-latest\n    needs: [build]\n    if: github.ref == 'refs/heads/main'\n    environment: production\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Deploy to Cloudflare Pages (Production)\n        run: npm run deploy:production\n        env:\n          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}\n          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}\n          VITE_ENVIRONMENT: production\n          VITE_SITE_URL: https://cozyartzmedia.com\n          VITE_CALLBACK_URL: https://cozyartzmedia.com/auth/callback\n          VITE_TURNSTILE_SITE_KEY: ${{ secrets.VITE_TURNSTILE_SITE_KEY }}\n\n      - name: Notify deployment success\n        if: success()\n        run: |\n          echo \"‚úÖ Production deployment successful!\"\n          echo \"üöÄ Site URL: https://cozyartzmedia.com\"\n\n      - name: Notify deployment failure\n        if: failure()\n        run: |\n          echo \"‚ùå Production deployment failed!\"\n          echo \"Please check the logs for details.\"\n